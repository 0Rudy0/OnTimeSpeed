@using OnTimeSpeed.Models

@{
    var currUser = Session["user"] as User;
    var imgUrl = currUser?.ImageUrl;
    var name = currUser?.name;
    var loggedIn = currUser != null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/png" href="~/favicon.png" />
    @*<link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />*@
    <title>OnTime Speed</title>
    @Styles.Render("~/Content/Layout")
    <link href="~/Content/fonts/materializeIcons.css" rel="stylesheet">


</head>
<body>
    <div id="layout">
        <div id="top">
            <div id="header-container">
                <div class="header-logo__image axosoft"></div>
                @*<a href="default" class="header-logo__image axosoft" title="Axosoft"><span>Axosoft</span></a>*@
                @if (Model.OnTimeUser != null)
                {
                    <div class="header_username" data-bind="click: openSettings">
                        <div class="userImage" style="background-image: url(@imgUrl)">
                        </div>
                        <span class="userName">@name</span>

                        <i class="fas fa-cog"></i>
                    </div>
                }
            </div>
        </div>
    </div>


    <div class="footer" style="position: fixed; bottom: 5px; left: 10px; font-size: 16px; opacity: 0.3;">
        <b>OnTime Speed</b> by Dr. Udman
    </div>

    @RenderBody()
    @Scripts.Render("~/bundles/Layout")
    @*<footer class="page-footer">
            <b>OnTimeSpeed</b> by Dr. Udman
        </footer>*@
    <script type="text/javascript">
        var appName = '@System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath';
        var loggedIn = @loggedIn.ToString().ToLower();
        var serial = '@Html.Raw(ViewBag.serial)';
        if (serial && serial != 'bnVsbA==') //bnVsbA== - null
            localStorage.setItem('serial', serial);
        else {
            recoverUser();
        }

        function recoverUser() {
            //debugger;
            var serial = localStorage.getItem('serial');
            if (serial) {
                $.ajax({
                    url: appName + '/Home/RecoverUser',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({
                        user: serial
                    }),
                    async: true,
                    cache: false,
                    success: function (msg) {
                        $('.spinner').hide();

                        if (msg.ontimeUser) {
                            viewModel.ontimeUser(msg.ontimeUser);
                            //location.reload();
                            var authPerformed = sessionStorage.getItem("reauthPreformed");
                            if (authPerformed) {
                                sessionStorage.removeItem("reauthPreformed");
                                if ($('.container').hasClass('hide')) {
                                   location.reload();
                                }
                                else {
                                    var tempToast = {
                                        html: '<span style="color: black">Sessija obnovljena</span>' + closeBtnHtml,
                                        classes: toastClasses,
                                        displayLength: toastLong
                                    };
                                    M.toast(tempToast);
                                }
                            }
                        }
                        else {
                            console.log(msg);
                            $('.connectBtn').removeClass('hide');
                            localStorage.removeItem('serial');
                            console.log('removing user from local storage');
                            location.reload();
                            viewModel.ontimeUser(null);
                        }
                        if (!msg.hrproUser) {
                            viewModel.hrproUser(null);
                            var tempToast = {
                                html: '<span style="color: black">Neuspješna prijava u HrNet<br>Neke funckionalnosti zbog toga nisu dostupne</span>' + closeBtnHtml,
                                classes: toastClasses,
                                displayLength: toastLong
                            };
                            M.toast(tempToast);
                        }
                        else {
                            viewModel.hrproUser(msg.hrproUser);
                        }

                        if ($('.container').hasClass('hide')) {
                            location.reload();
                        }

                    },
                    error: function (err) {
                        $('.spinner').hide();
                        console.log(err);
                        $('.connectBtn').removeClass('hide');
                        localStorage.removeItem('serial');
                        console.log('removing user from local storage');
                        location.reload();

                        $('.spinner').hide();
                    }
                });
            }
            else {
                setTimeout(function() {
                    viewModel.hrproUser(null);
                    viewModel.ontimeUser(null);   

                    $('.container').removeClass('hide');
                    $('.connectBtn').removeClass('hide');
                    $('.modals').removeClass('hide');
                }, 200);
                //location.reload();
                //$('.connectBtn').removeClass('hide');
                //$('.spinner').hide();
            }
        }
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
